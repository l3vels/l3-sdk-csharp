/*
 * L3vels Api
 *
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.3
 * Contact: support@l3vels.xyz
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using L3vels.Sdk.Client;
using L3vels.Sdk.Api;
// uncomment below to import models
//using L3vels.Sdk.Model;

namespace L3vels.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing MintApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MintApiTests : IDisposable
    {
        private MintApi instance;

        public MintApiTests()
        {
            instance = new MintApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MintApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MintApi
            //Assert.IsType<MintApi>(instance);
        }

        /// <summary>
        /// Test MintControllerAirdrop
        /// </summary>
        [Fact]
        public void MintControllerAirdropTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //MintDto mintDto = null;
            //instance.MintControllerAirdrop(authorization, mintDto);
        }

        /// <summary>
        /// Test MintControllerAward
        /// </summary>
        [Fact]
        public void MintControllerAwardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //MintDto mintDto = null;
            //instance.MintControllerAward(authorization, mintDto);
        }

        /// <summary>
        /// Test MintControllerMint
        /// </summary>
        [Fact]
        public void MintControllerMintTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //MintDto mintDto = null;
            //instance.MintControllerMint(authorization, mintDto);
        }

        /// <summary>
        /// Test MintControllerMintBatch
        /// </summary>
        [Fact]
        public void MintControllerMintBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //MintBatchDto mintBatchDto = null;
            //instance.MintControllerMintBatch(authorization, mintBatchDto);
        }

        /// <summary>
        /// Test MintControllerPlayerMint
        /// </summary>
        [Fact]
        public void MintControllerPlayerMintTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //MintDto mintDto = null;
            //instance.MintControllerPlayerMint(authorization, mintDto);
        }

        /// <summary>
        /// Test MintControllerPlayerMintBatch
        /// </summary>
        [Fact]
        public void MintControllerPlayerMintBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //MintBatchDto mintBatchDto = null;
            //instance.MintControllerPlayerMintBatch(authorization, mintBatchDto);
        }
    }
}
